---
title: Loss of PAS data
owner: Platform Recovery
---

<strong><%= modified_date %></strong>

This guide explains how to use `bbr` to restore a piece of Pivotal Application Service (PAS) data, such as a user or space, which has been lost.  This is only possible if you have previously taken a backup using `bbr deployment --deployment <DEPLOYMENT_NAME> backup`, which produces an artifact of the form `<DEPLOYMENT_NAME>_<TIMESTAMP>/`.

## <a id="validating-artifact"></a>Validating your backup artifact
Before restoring, you should check whether the backup artifact you have is suitable for your restore need. You can untar and explore the PAS backup artifact to verify that it contains the data that you need to restore.  Depending on the data to be restore, the check varies, so we have provided the following examples:

### <a id="check-org-present"></a>Checking if an org is present
To check whether your backup artifact possesses the org you want to restore, you can do the following:

```bash
$> tar -xvf backup_restore-0-bbr-cloudcontrollerdb.tar
$> cat cloudcontroller-artifact-file | grep “<ORG_TO_RESTORE>”
```

If the line
```
INSERT INTO `organizations` VALUES (..., ,'<ORG_TO_RESTORE>', ...);
```
is present in the standard output of the last command, then you can restore this org.

### <a id="check-space-present"></a>Checking if a space is present
To check whether your backup artifact possesses the space you want to restore, you can do the following:

```bash
$> tar -xvf backup_restore-0-bbr-cloudcontrollerdb.tar
$> cat cloudcontroller-artifact-file | grep “<SPACE_TO_RESTORE>”
```

If the line
```
INSERT INTO `spaces` VALUES (..., ,'<SPACE_TO_RESTORE>', ...);
```
is present in the standard output of the last command, then you can restore this space.

### <a id="check-user-present"></a>Checking if a user is present
To check whether your backup artifact possesses the user you want to restore, you can do the following:

```bash
$> tar -xvf backup_restore-0-bbr-uaadb.tar
$> cat uaadb-artifact-file | grep “<USER_TO_RESTORE>”
```

If the line
```
INSERT INTO `users` VALUES (..., ,'<USER_TO_RESTORE>', ...);
```
is present in the standard output of the last command, then you can restore this user.

### <a id="check-route-present"></a>Checking if a route is present
To check whether your backup artifact possesses the route you want to restore, you can do the following:

```bash
$> tar -xvf backup_restore-0-bbr-cloudcontrollerdb.tar
$> cat cloudcontroller-artifact-file | grep “<ROUTE_TO_RESTORE>”
```

If the line
```
INSERT INTO `routes` VALUES (..., ,'<ROUTE_TO_RESTORE>', ...);
```
is present in the standard output of the last command, then you can restore this route.

### <a id="check-domain-present"></a>Checking if a domain is present
To check whether your backup artifact possesses the domain you want to restore, you can do the following:

```bash
$> tar -xvf backup_restore-0-bbr-cloudcontrollerdb.tar
$> cat cloudcontroller-artifact-file | grep “<DOMAIN_TO_RESTORE>”
```

If the line
```
INSERT INTO `domains` VALUES (..., ,'<DOMAIN_TO_RESTORE>', ...);
```
is present in the standard output of the last command, then you can restore this domain.

### <a id="check-app-present"></a>Checking if an app is present
To check whether your backup artifact possesses the app you want to restore, you can do the following:

```bash
$> tar -xvf backup_restore-0-bbr-cloudcontrollerdb.tar
$> cat cloudcontroller-artifact-file | grep “<APP_TO_RESTORE>”
```

If the line
```
INSERT INTO `apps` VALUES (..., ,'<APP_TO_RESTORE>', '<APP_DROPLET>', ...);
```
is present in the standard output of the last command, then you can restore this app if the corresponding droplet for it is present.
If you have also backed up your blobstore, the the droplet should also be present.

You can check inside the blobstore backup artifact to see if the droplet is present by doing the following:

```bash
$> tar -xvf blobstore-backup.tar
$> tree blobstore-backup | grep "<APP_DROPLET>"
```

If the droplet, `<APP_DROPLET>`, appears in the output of the last command, then you can restore your app.

<p class="note"><strong>Note:</strong> If you are using an external blobstore, you will have to go into your IaaS console and check the backup bucket to see if the droplet is present.</p>

## <a id="performing-restore"></a>Performing the restore
<p class="note warning"><strong>WARNING:</strong> BBR restore is a destructive process which will remove any data currently held in your deployment.  If your backup artifact was not taken recently, this will lead to the loss of all new data since the backup was taken when you do a restore.</p>

Pivotal recommends that you verify the compatibility of your artifact with the target environment by attempting a restore on an identical environment to the intended target.  If this is not possible, it is highly recommended to check that the artifact is compatible, defined by the [BBR compatibility restrictions](../restore-pcf-bbr.html#compatibility).
You can now run `bbr deployment --deployment <DEPLOYMENT_NAME> restore` by following the `bbr` instructions to 
<a href="../restore-pcf-bbr.html#restore-ert">restore your PAS deployment.</a>

After a `bbr deployment --deployment <DEPLOYMENT_NAME> restore`, PAS should have rolled back to its state at the time when the backup was taken, and contain the data that you had previously lost.

## <a id="consolidating-environment"></a>Consolidating your environment

If service instances have been created but were not present when the backup was taken, then the BOSH service deployments will be orphaned from PAS's point of view. PAS will have no reference to these service deployments but they will continue to exist and can be found via the BOSH command-line interface. Orphaned on-demand service instances can be identified by running the on-demand-service-broker errand `orphan-deployments`.